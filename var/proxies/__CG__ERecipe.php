<?php

namespace DoctrineProxies\__CG__;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ERecipe extends \ERecipe implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'ERecipe' . "\0" . 'idRecipe', '' . "\0" . 'ERecipe' . "\0" . 'nameRecipe', '' . "\0" . 'ERecipe' . "\0" . 'infos', '' . "\0" . 'ERecipe' . "\0" . 'description', '' . "\0" . 'ERecipe' . "\0" . 'ingredients', '' . "\0" . 'ERecipe' . "\0" . 'preparation_time', '' . "\0" . 'ERecipe' . "\0" . 'cooking_time', '' . "\0" . 'ERecipe' . "\0" . 'grams_one_portion', '' . "\0" . 'ERecipe' . "\0" . 'image'];
        }

        return ['__isInitialized__', '' . "\0" . 'ERecipe' . "\0" . 'idRecipe', '' . "\0" . 'ERecipe' . "\0" . 'nameRecipe', '' . "\0" . 'ERecipe' . "\0" . 'infos', '' . "\0" . 'ERecipe' . "\0" . 'description', '' . "\0" . 'ERecipe' . "\0" . 'ingredients', '' . "\0" . 'ERecipe' . "\0" . 'preparation_time', '' . "\0" . 'ERecipe' . "\0" . 'cooking_time', '' . "\0" . 'ERecipe' . "\0" . 'grams_one_portion', '' . "\0" . 'ERecipe' . "\0" . 'image'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ERecipe $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(?\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(?\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdRecipe(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdRecipe();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdRecipe', []);

        return parent::getIdRecipe();
    }

    /**
     * {@inheritDoc}
     */
    public function getNameRecipe(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameRecipe', []);

        return parent::getNameRecipe();
    }

    /**
     * {@inheritDoc}
     */
    public function getInfos(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInfos', []);

        return parent::getInfos();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getIngredients(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIngredients', []);

        return parent::getIngredients();
    }

    /**
     * {@inheritDoc}
     */
    public function getPreparationTime(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreparationTime', []);

        return parent::getPreparationTime();
    }

    /**
     * {@inheritDoc}
     */
    public function getCookingTime(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCookingTime', []);

        return parent::getCookingTime();
    }

    /**
     * {@inheritDoc}
     */
    public function getGramsOnePortion(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGramsOnePortion', []);

        return parent::getGramsOnePortion();
    }

    /**
     * {@inheritDoc}
     */
    public function getImage(): \EImage
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameRecipe(string $nameRecipe): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameRecipe', [$nameRecipe]);

        parent::setNameRecipe($nameRecipe);
    }

    /**
     * {@inheritDoc}
     */
    public function setInfos(string $infos): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInfos', [$infos]);

        parent::setInfos($infos);
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(string $description): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function setPreparationTime(int $preparation_time): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreparationTime', [$preparation_time]);

        parent::setPreparationTime($preparation_time);
    }

    /**
     * {@inheritDoc}
     */
    public function setCookingTime(int $cooking_time): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCookingTime', [$cooking_time]);

        parent::setCookingTime($cooking_time);
    }

    /**
     * {@inheritDoc}
     */
    public function setGramsOnePortion(int $grams): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGramsOnePortion', [$grams]);

        parent::setGramsOnePortion($grams);
    }

    /**
     * {@inheritDoc}
     */
    public function setImage(\EImage $image): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function addIngredient(\EMeal $ingredient): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIngredient', [$ingredient]);

        parent::addIngredient($ingredient);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIngredient(\EMeal $ingredient): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIngredient', [$ingredient]);

        parent::removeIngredient($ingredient);
    }

}
