<?php

namespace DoctrineProxies\__CG__;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class EProfile extends \EProfile implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'nickname', 'pro_pic', 'biography', 'info', 'posts', 'vip', 'isBanned', 'meal_plans', 'comment', 'likes', 'idUser', 'name', 'surname', 'birthDate', 'gender', 'email', 'password', 'username'];
        }

        return ['__isInitialized__', 'nickname', 'pro_pic', 'biography', 'info', 'posts', 'vip', 'isBanned', 'meal_plans', 'comment', 'likes', 'idUser', 'name', 'surname', 'birthDate', 'gender', 'email', 'password', 'username'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (EProfile $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(?\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(?\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getNickname(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNickname', []);

        return parent::getNickname();
    }

    /**
     * {@inheritDoc}
     */
    public function getProPic(): ?\EImage
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProPic', []);

        return parent::getProPic();
    }

    /**
     * {@inheritDoc}
     */
    public function getBiography(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBiography', []);

        return parent::getBiography();
    }

    /**
     * {@inheritDoc}
     */
    public function getInfo(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInfo', []);

        return parent::getInfo();
    }

    /**
     * {@inheritDoc}
     */
    public function getPosts(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosts', []);

        return parent::getPosts();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsBanned(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsBanned', []);

        return parent::getIsBanned();
    }

    /**
     * {@inheritDoc}
     */
    public function getVip(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVip', []);

        return parent::getVip();
    }

    /**
     * {@inheritDoc}
     */
    public function getMealPlans(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMealPlans', []);

        return parent::getMealPlans();
    }

    /**
     * {@inheritDoc}
     */
    public function setNickname(string $nickname): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNickname', [$nickname]);

        parent::setNickname($nickname);
    }

    /**
     * {@inheritDoc}
     */
    public function setProPic(?\EImage $pro_pic): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProPic', [$pro_pic]);

        parent::setProPic($pro_pic);
    }

    /**
     * {@inheritDoc}
     */
    public function setBiography(string $biography): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBiography', [$biography]);

        parent::setBiography($biography);
    }

    /**
     * {@inheritDoc}
     */
    public function setInfo(string $info): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInfo', [$info]);

        parent::setInfo($info);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsBanned(bool $isBanned): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsBanned', [$isBanned]);

        parent::setIsBanned($isBanned);
    }

    /**
     * {@inheritDoc}
     */
    public function setVip(bool $vip): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVip', [$vip]);

        parent::setVip($vip);
    }

    /**
     * {@inheritDoc}
     */
    public function addMealPlan(\EMealPlan $meal_plan): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMealPlan', [$meal_plan]);

        parent::addMealPlan($meal_plan);
    }

    /**
     * {@inheritDoc}
     */
    public function addPost(\EPost $post): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPost', [$post]);

        parent::addPost($post);
    }

    /**
     * {@inheritDoc}
     */
    public function addComment(\EComment $comment): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComment', [$comment]);

        parent::addComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function addLike(\ELike $like): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLike', [$like]);

        parent::addLike($like);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUser(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdUser();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUser', []);

        return parent::getIdUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getSurname(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurname', []);

        return parent::getSurname();
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthDate(): \DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthDate', []);

        return parent::getBirthDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthDateStr(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthDateStr', []);

        return parent::getBirthDateStr();
    }

    /**
     * {@inheritDoc}
     */
    public function getGender(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGender', []);

        return parent::getGender();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setSurname(string $surname): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSurname', [$surname]);

        parent::setSurname($surname);
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthDate(\DateTime $birthDate): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthDate', [$birthDate]);

        parent::setBirthDate($birthDate);
    }

    /**
     * {@inheritDoc}
     */
    public function setGender(string $gender): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGender', [$gender]);

        parent::setGender($gender);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setHashedPassword(string $hashedPassword): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHashedPassword', [$hashedPassword]);

        parent::setHashedPassword($hashedPassword);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername(string $username): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        parent::setUsername($username);
    }

}
